Welcome back in this task.
We're going to start helping our client decide where
to purchase office space for their business.
In the last task we covered how to import the dataset into big
query. By the end of this task we will write a SQL
statement to identify cities that align with our clients
ideal temperature requirements. Which is
between 45 to 65°F. Click on the plus sign to open a compose
new query tab.
We will start by writing a select clause.
A select clause specifies which columns we want to include in
the results because our client is interested in choosing a
city based off of its average temperature commute time and
happiness ranking,
We are going to pull all these columns from our dataset. Type
select city underscore name comma average underscore camp
comma where average is abbreviated as AVG
There will be error messages as you type because big query is
checking the query syntax.
You can simply ignore them until you've finished typing the
query average commute comma
happiness underscore ranking.
You can always click on the cities tab
then schema to look at the column names next we will write a
from clause.
The from clause tells SQL which table we want to extract
data from.
So we will add the table we have created earlier from city underscore
data dot
cities. Here cities is the table that is in the city
underscore data dataset.
Notice how we're formatting our SQL query.
This is best practice for readability.
This is why we're using uppercase for SQL keywords and
indentations.
Now we are ready to run this query press the run option.
You have just extracted each world of the dataset.
You also notice all of the columns are those that you
specified in your select clause.
Congratulations.
You just wrote a sequel statement to extract data from a
table. Now our client has specified that they are interested
in purchasing the new office building in the city where the
average temperature is between 45 and 65°F.
We can add this specification by using where. Where specifies
criteria that must be satisfied for a particular row to be
included in the results.
So we will add this to the SQL statement where average
underscore temp between 45 and 65.
The between keyword specifies two values of a range. Here we
mean 45 to 65 inclusive.
Now run this query by clicking on the run option.
There you go.
You notice that we are only getting cities within this
temperature range.
Great work.
Now let's summarize what we did in this last task.
Our goal for this task was to write a SQL statement to
identify which cities meet our clients ideal temperature
requirements.
In the process of accomplishing this goal we learn to use
three SQL keywords.
We use the select clause to specify the columns to be
included in a request for data.
We used the from clause to instruct SQL to extract data
from a particular table, and finally, we use the where clause
to specify the criteria that must be met from within a
particular row.
By the end of this task, we narrow down 11 cities that meet
our clients ideal temperature range.
Now we're not done yet before selecting the right city for
our clients to move to.
We'll also need to consider the other requirements around
commute times in the city and the city's happiness ranking.
So in the next task, we will take our search one step further
and filter our results by the average commute time.
Let's go to the next task.